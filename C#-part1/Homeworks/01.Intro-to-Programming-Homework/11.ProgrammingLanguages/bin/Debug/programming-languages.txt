Basic information about today's most used programming languages.
TOP 10 programming languages as of 2015:

(1). C:
	In computing, C is a general-purpose programming language initially developed by Dennis Ritchie between 1969 and 1973.
	C is one of the most widely used programming languages of all time.
	Many later languages have borrowed directly or indirectly from C, including D, Go, Rust, Java, JavaScript, Limbo, LPC, C#, Objective-C, Perl, PHP, Python, Verilog (hardware description language),
	and Unix's C shell. These languages have drawn many of their control structures and other basic features from C.	

(2). Java:
	Java is a general-purpose computer programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. 
	It is intended to let application developers "write once, run anywhere", meaning that code that runs on one platform does not need to be recompiled to run on another.
	Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of computer architecture.
	Java was originally developed by James Gosling at Sun Microsystems (which has since merged into Oracle Corporation) and released in 1995 as a core component of Sun Microsystems' Java platform. 
	The language derives much of its syntax from C and C++, but it has fewer low-level facilities than either of them. 

(3). Objective-C:
	Objective-C is a general-purpose, object-oriented programming language that adds Smalltalk-style messaging to the C programming language. 
	It is the main programming language used by Apple for the OS X and iOS operating systems, and their respective application programming interfaces (APIs), Cocoa and Cocoa Touch.
	The programming language Objective-C was originally developed in the early 1980s. It was selected as the main language used by NeXT for its NeXTSTEP operating system, from which OS X and iOS are derived.

(4). C++:
	C++ (pronounced cee plus plus) is a general-purpose programming language. It has imperative, object-oriented and generic programming features, while also providing the facilities for low-level memory manipulation.
	It is designed with a bias toward system programming (e.g., for use in embedded systems or operating system kernels), with performance, efficiency and flexibility of use as its design requirements. 
	C++ has also been found useful in many other contexts, including desktop applications, servers (e.g. e-commerce, web search or SQL servers), performance-critical applications (e.g. telephone switches or space probes), and entertainment software.
	Many other programming languages have been influenced by C++, including C#, Java, and newer versions of C (after 1998).	

(5). C#:
	C# (pronounced as see sharp) is a multi-paradigm programming language encompassing strong typing, imperative, declarative, functional, generic, object-oriented (class-based), and component-oriented programming disciplines. 
	It was developed by Microsoft within its .NET initiative and later approved as a standard by Ecma (ECMA-334) and ISO (ISO/IEC 23270:2006). C# is one of the programming languages designed for the Common Language Infrastructure.
	C# is intended to be a simple, modern, general-purpose, object-oriented programming language.Its development team is led by Anders Hejlsberg. The most recent version is C# 5.0, which was released on August 15, 2012.

(6). PHP:
	PHP is a server-side scripting language designed for web development but also used as a general-purpose programming language. As of January 2013, PHP was installed on more than 240 million websites (39% of those sampled) and 2.1 million web servers.
	Originally created by Rasmus Lerdorf in 1994, the reference implementation of PHP (powered by the Zend Engine) is now produced by The PHP Group. While PHP originally stood for Personal Home Page,it now stands for PHP: Hypertext Preprocessor, which is a recursive backronym.

(7). JavaScript:
	JavaScript is a dynamic computer programming language. It is most commonly used as part of web browsers, whose implementations allow client-side scripts to interact with the user, control the browser, communicate asynchronously, and alter the document content that is displayed. 
	It is also used in server-side network programming with runtime environments such as Node.js, game development and the creation of desktop and mobile applications.

(8). Python:
	Python is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java. 
	The language provides constructs intended to enable clear programs on both a small and large scale.
	Python supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles. It features a dynamic type system and automatic memory management and has a large and comprehensive standard library.

(9). Perl:
	Perl is a family of high-level, general-purpose, interpreted, dynamic programming languages. The languages in this family include Perl 5 and Perl 6.
	Perl was originally developed by Larry Wall in 1987 as a general-purpose Unix scripting language to make report processing easier.	
	The Perl languages borrow features from other programming languages including C, shell scripting (sh), AWK, and sed.
	Perl 5 gained widespread popularity in the late 1990s as a CGI scripting language, in part due to its parsing abilities.

(10). PL/SQL:
	PL/SQL (Procedural Language/Structured Query Language) is Oracle Corporation's procedural language extension for SQL and the Oracle relational database. PL/SQL is available in Oracle Database (since version 7), TimesTen in-memory database (since version 11.2.1), and IBM DB2 (since version 9.7).
	Oracle Corporation usually extends PL/SQL functionality with each successive release of the Oracle Database. PL/SQL includes procedural language elements such as conditions and loops. It allows declaration of constants and variables, procedures and functions, types and variables of those types, and triggers. 
	It can handle exceptions (runtime errors). Arrays are supported involving the use of PL/SQL collections. Implementations from version 8 of Oracle Database onwards have included features associated with object-orientation. 
	One can create PL/SQL units such as procedures, functions, packages, types, and triggers, which are stored in the database for reuse by applications that use any of the Oracle Database programmatic interfaces.